

    def add_qm(self, cecid) :
        now = datetime.datetime.now()
        qm = {
            'date': str(now.date()),
            'cecid': cecid
        }
        self.qm_coll.insert_one(qm)
    
    def add_queue(self, cnt, date) :
        now = datetime.datetime.now()
        qm = {
            'date': str(now.date()),
            'pretty_queue': get_pretty_queue(),
            'case_pickers_count': cnt,
            # 'cecid': 'test'
        }
        print(list(self.qm_coll.find({'date': date, 'case_pickers_count': {"$exists": True}})))
        if len(list(self.qm_coll.find({'date': date, 'case_pickers_count': {"$exists": True}}))) > 0 :
            self.qm_coll.update_one({'date': date, 'case_pickers_count': {"$exists": True}}, {"$set": {'pretty_queue': get_pretty_queue(), 'case_pickers_count': cnt}})
        else :
            self.qm_coll.insert_one(qm)

    def get_report(self, date=None) :
            
            if date is None :

                date = str(datetime.datetime.now().date())

                r_obj = redis_DB()

                engs = r_obj.get_all_engs()
                cnt = 0
                for eng, val in engs.items() :
                    eng_availability_state = r_obj.get_idx_eng_availability(val['idx'], val['queue_name'])
                    if eng_availability_state != '2' and eng_availability_state != '12' :
                        cnt += 1
                # print(cnt)
                self.add_queue(cnt, date)

                del r_obj



            # nomral_p1 = len(list(self.case_logs_coll.find({ 'date': date, 'sev': '1', 'type': 'Normal', 'assign_type': {"$ne": "bl_assign"} })))
            # nomral_p2 = len(list(self.case_logs_coll.find({ 'date': date, 'sev': '2', 'type': 'Normal', 'assign_type': {"$ne": "bl_assign"} })))
            # nomral_p3 = len(list(self.case_logs_coll.find({ 'date': date, 'sev': '3', 'type': 'Normal', 'assign_type': {"$ne": "bl_assign"} })))
            # nomral_p4 = len(list(self.case_logs_coll.find({ 'date': date, 'sev': '4', 'type': 'Normal', 'assign_type': {"$ne": "bl_assign"} })))

            # collab_p1 = len(list(self.case_logs_coll.find({ 'date': date, 'sev': '1', 'type': 'Collab' })))
            # collab_p2 = len(list(self.case_logs_coll.find({ 'date': date, 'sev': '2', 'type': 'Collab' })))
            # collab_p3 = len(list(self.case_logs_coll.find({ 'date': date, 'sev': '3', 'type': 'Collab' })))
            # collab_p4 = len(list(self.case_logs_coll.find({ 'date': date, 'sev': '4', 'type': 'Collab' })))

            # fts_p1 = len(list(self.case_logs_coll.find({ 'date': date, 'sev': '1', 'type': 'FTS' })))
            # fts_p2 = len(list(self.case_logs_coll.find({ 'date': date, 'sev': '2', 'type': 'FTS' })))
            # fts_p3 = len(list(self.case_logs_coll.find({ 'date': date, 'sev': '3', 'type': 'FTS' })))
            # fts_p4 = len(list(self.case_logs_coll.find({ 'date': date, 'sev': '4', 'type': 'FTS' })))

            nomral_p1 = len(set( [document['sr_no'] for document in self.case_logs_coll.find({ 'date': date, 'sev': '1', 'type': 'Normal', 'assign_type': {"$ne": "bl_assign"} })] ))
            nomral_p2 = len(set( [document['sr_no'] for document in self.case_logs_coll.find({ 'date': date, 'sev': '2', 'type': 'Normal', 'assign_type': {"$ne": "bl_assign"} })] ))
            nomral_p3 = len(set( [document['sr_no'] for document in self.case_logs_coll.find({ 'date': date, 'sev': '3', 'type': 'Normal', 'assign_type': {"$ne": "bl_assign"} }) ] ))
            nomral_p4 = len(set( [document['sr_no'] for document in self.case_logs_coll.find({ 'date': date, 'sev': '4', 'type': 'Normal', 'assign_type': {"$ne": "bl_assign"} }) ] ))

            collab_p1 = len(set( [document['sr_no'] for document in self.case_logs_coll.find({ 'date': date, 'sev': '1', 'type': 'Collab' }) ] ))
            collab_p2 = len(set( [document['sr_no'] for document in self.case_logs_coll.find({ 'date': date, 'sev': '2', 'type': 'Collab' }) ] ))
            collab_p3 = len(set( [document['sr_no'] for document in self.case_logs_coll.find({ 'date': date, 'sev': '3', 'type': 'Collab' }) ] ))
            collab_p4 = len(set( [document['sr_no'] for document in self.case_logs_coll.find({ 'date': date, 'sev': '4', 'type': 'Collab' }) ] ))

            fts_p1 = len(set( [document['sr_no'] for document in self.case_logs_coll.find({ 'date': date, 'sev': '1', 'type': 'FTS' }) ] ))
            fts_p2 = len(set( [document['sr_no'] for document in self.case_logs_coll.find({ 'date': date, 'sev': '2', 'type': 'FTS' }) ] ))
            fts_p3 = len(set( [document['sr_no'] for document in self.case_logs_coll.find({ 'date': date, 'sev': '3', 'type': 'FTS' }) ] ))
            fts_p4 = len(set( [document['sr_no'] for document in self.case_logs_coll.find({ 'date': date, 'sev': '4', 'type': 'FTS' }) ] ))

            tlist = ["indonesia", "malaysia", "philippines", "singapore", "thailand", "vietnam", "VIET NAM"]
            asean_countries_list = [ country.upper() for country in tlist]
            # total_asean = len(list(self.case_logs_coll.find({ 'date': date,  'country': {"$in": asean_countries_list}})))
            total_asean = len(list(self.case_logs_coll.find({ 'date': date,  'queue': 'asean_queue', 'assign_type': {"$ne": 'bl_assign'}})))

            american_countries = ["UNITED STATES", "ANTIGUA AND BARBUDA","BAHAMAS","BARBADOS", "BELIZE", "CANADA", "COSTA RICA",  "CUBA", "DOMINICA", "DOMINICAN REPUBLIC", "EL SALVADOR", "GRENADA",
                                    "GUATEMALA", "HAITI", "HONDURAS", "JAMAICA", "MEXICO", "NICARAGUA", "PANAMA", "SAINT KITTS AND NEVIS", "SAINT LUCIA", "SAINT VINCENT AND THE GRENADINES",
                                    "TRINIDAD AND TOBAGO", "ARGENTINA", "BOLIVIA", "BRAZIL", "CHILE", "COLOMBIA", "ECUADOR", "GUYANA", "PARAGUAY", "PERU", "SURINAME", "URUGUAY", "VENEZUELA"]

            total_us = len(set( [document['sr_no'] for document in self.case_logs_coll.find({ 'date': date , 'country': {"$in": american_countries}}) ] ))

            qm = ''
            qms = list(self.qm_coll.find({'date': date, 'cecid': {"$exists": True}}))
            for eqm in qms :
                q = eqm['cecid']
                qm += f' {q}'

            return [nomral_p1, nomral_p2, nomral_p3, nomral_p4], [collab_p1, collab_p2, collab_p3, collab_p4], [fts_p1, fts_p2, fts_p3, fts_p4], total_asean, total_us, qm
    
    def get_requeue_case_list(self, date=None):
        
        if date is None :
            date = str(datetime.datetime.now().date())

        requeue_cases = [document['sr_no'] for document in self.borg_ping_coll.find({ 'date': date, 'Status': 'Requeue' })]

        return requeue_cases
